{"version":3,"file":"main.umd.js","sources":["../src/ArgumentError.js","../src/Command.js","../src/Command/Templates.js","../src/Command/Clone.js","../src/main.js"],"sourcesContent":["export default class ArgumentError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ArgumentError';\n    }\n}\n","import chalk from 'chalk'\nimport logicon from 'log-utils'\n\nexport default class Command {\n\n    run(config) {\n        console.log(\"first argument to run() is always 'config'\")\n        return this\n    }\n\n    title(title) {\n        console.log(chalk.magenta(`\\n${title}:`))\n        return this\n    }\n\n    info(msg) {\n        console.log(` ${logicon.info} ${msg}`)\n        return this\n    }\n\n    error(msg) {\n        console.log(chalk.red(` ${logicon.error} ${msg}`))\n        return this\n    }\n\n    success(msg) {\n        console.log(chalk.green(` ${logicon.success} ${msg}`))\n        return this\n    }\n\n    warning(msg) {\n        console.log(chalk.yellow(` ${logicon.warning} ${msg}`))\n        return this\n    }\n\n    close() {\n        this.success('done\\n')\n        return this\n    }\n}","import fs from 'fs'\nimport path from 'path'\nimport chalk from 'chalk'\nimport Command from \"../Command\";\n\nexport default class TemplatesCommand extends Command {\n\n    run(config) {\n        this.templatePaths(config.templates.path)\n            .map(filepath => {\n                this.info(`${chalk.blue(path.basename(filepath))} -> ${filepath}`)\n            })\n        return this\n    }\n\n\n    templatePaths(folder) {\n        const paths = []\n        fs.readdirSync(folder).forEach(file => {\n            const filepath = `${folder}/${file}`\n            if (fs.statSync(filepath).isDirectory()) {\n                paths.push(fs.realpathSync(filepath))\n            }\n        });\n        return paths;\n    }\n\n}","import Command from \"../Command\";\nimport chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport copydir from 'copy-dir'\nimport mkdirp from 'mkdirp'\n\nexport default class CloneCommand extends Command {\n\n    run(config, templateName, target) {\n        const templates = this.templates(fs.realpathSync(config.templates.path))\n\n        if ( ! this.has(templateName, templates)) {\n            return this.error(`template not found ${templateName}`)\n        }\n\n        this.info(`cloning template ${chalk.blue(templateName)}`)\n\n        target = this.createTargetFolder(target)\n\n        const template = this.resolve(templateName, templates)\n\n        this.clone(template.path, target)\n\n        this.info(`To run sketch use: cd ${target} && npm install && npm run serve`)\n\n        return this\n    }\n\n    createTargetFolder(folder) {\n\n        if ( ! fs.existsSync(folder)) {\n            mkdirp(folder)\n\n        } else {\n            folder = this.autoIncrementFoldername(folder)\n            mkdirp(folder)\n        }\n\n        return folder\n    }\n\n    resolve(name, templates) {\n        return _.find(templates, {\"name\": name})\n    }\n\n    has(name, templates) {\n        return this.resolve(name, templates) !== undefined\n    }\n\n    clone(src, dst) {\n        copydir.sync(src, dst, {\n                filter: (stat, filepath, filename) => {\n                    if (stat === 'file') {\n                        this.info(`copying ${filepath} -> ${chalk.green(dst + '/' + filename)}`)\n                    }\n                    return true\n                }\n            }\n        )\n    }\n\n    templateNames(dir) {\n        return this.templates(dir).map(tpl => tpl.name)\n    }\n\n    templates(dir) {\n        const paths = []\n        fs.readdirSync(dir).forEach(fname => {\n            const fpath = `${dir}/${fname}`\n            if (fs.statSync(fpath).isDirectory()) {\n                paths.push({name: fname, path: fs.realpathSync(fpath)})\n            }\n        });\n        return paths;\n    }\n\n    autoIncrementFoldername(candidate) {\n        let i = 1;\n        let filepath = candidate;\n\n        while (fs.existsSync(filepath)) {\n            this.warning(`exists ${filepath}`)\n            const tag = i.toString().padStart(2, '0');\n            filepath = `${candidate}-${tag}`;\n            i++;\n        }\n\n        this.success(`target ${filepath}`)\n\n        return filepath\n    }\n\n}","\nimport program from \"commander\";\nimport ArgumentError from \"./ArgumentError\";\nimport TemplatesCommand from \"./Command/Templates\";\nimport CloneCommand from \"./Command/Clone\";\nimport APP_PATH from 'app-root-path'\n\nconst config = {\n    templates: {\n        path: `${APP_PATH}/templates`,\n        default: \"basic\"\n    }\n}\n\nprogram\n    .version('0.1.0')\n\n\nprogram\n    .command('templates')\n    .alias('tpl')\n    .description('list available templates')\n    .action((cmd) => {\n        new TemplatesCommand()\n            .title('templates')\n            .run(config)\n            .close()\n    })\n\nprogram\n    .command('clone <template-name> [destination]')\n    .description('clone template intto target directory')\n    .action((tpl, dst, cmd) => {\n\n        dst = dst || `./${tpl}`\n\n        new CloneCommand()\n            .title('clone')\n            .run(config, tpl, dst)\n            .close()\n\n    })\n\n\ntry {\n    program.parse(process.argv);\n\n    if ( ! process.argv.slice(2).length) {\n        program.help();\n    }\n\n} catch (e) {\n    if (e instanceof ArgumentError) {\n        console.log('error:', e.message);\n    } else {\n        throw e;\n    }\n}\n"],"names":["ArgumentError","Error","constructor","message","name","Command","run","config","console","log","title","chalk","magenta","info","msg","logicon","error","red","success","green","warning","yellow","close","TemplatesCommand","templatePaths","templates","path","map","filepath","blue","basename","folder","paths","fs","readdirSync","forEach","file","statSync","isDirectory","push","realpathSync","CloneCommand","templateName","target","has","createTargetFolder","template","resolve","clone","existsSync","mkdirp","autoIncrementFoldername","_","find","undefined","src","dst","copydir","sync","filter","stat","filename","templateNames","dir","tpl","fname","fpath","candidate","i","tag","toString","padStart","APP_PATH","default","program","version","command","alias","description","action","cmd","parse","process","argv","slice","length","help","e"],"mappings":"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"}