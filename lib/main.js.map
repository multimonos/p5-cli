{"version":3,"file":"main.js","sources":["../src/ArgumentError.js","../src/Command.js","../src/Command/Templates.js","../src/Command/Clone.js","../src/Command/Serve.js","../src/config.js","../src/Command/Config.js","../src/Command/DataServer.js","../src/main.js"],"sourcesContent":["export default class ArgumentError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ArgumentError';\n    }\n}\n","import chalk from 'chalk'\nimport logicon from 'log-utils'\n\nexport default class Command {\n\n    run(config) {\n        console.log(\"first argument to run() is always 'config'\")\n        return this\n    }\n\n    title(title) {\n        console.log(chalk.magenta(`\\n${title}:`))\n        return this\n    }\n\n    info(msg) {\n        console.log(` ${logicon.info} ${msg}`)\n        return this\n    }\n\n    error(msg) {\n        console.log(chalk.red(` ${logicon.error} ${msg}`))\n        return this\n    }\n\n    success(msg) {\n        console.log(chalk.green(` ${logicon.success} ${msg}`))\n        return this\n    }\n\n    warning(msg) {\n        console.log(chalk.yellow(` ${logicon.warning} ${msg}`))\n        return this\n    }\n\n    close() {\n        this.success('done\\n')\n        return this\n    }\n}","import fs from 'fs'\nimport path from 'path'\nimport chalk from 'chalk'\nimport Command from \"../Command\";\n\nexport default class TemplatesCommand extends Command {\n\n    run(config) {\n        this.templatePaths(config.templates.path)\n            .map(filepath => {\n                this.info(`${chalk.blue(path.basename(filepath))} -> ${filepath}`)\n            })\n        return this\n    }\n\n\n    templatePaths(folder) {\n        const paths = []\n        fs.readdirSync(folder).forEach(file => {\n            const filepath = `${folder}/${file}`\n            if (fs.statSync(filepath).isDirectory()) {\n                paths.push(fs.realpathSync(filepath))\n            }\n        });\n        return paths;\n    }\n\n}","import Command from \"../Command\";\nimport chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport copydir from 'copy-dir'\nimport mkdirp from 'mkdirp'\n\nexport default class CloneCommand extends Command {\n\n    run(config, templateName, target) {\n        const templates = this.templates(fs.realpathSync(config.templates.path))\n\n        if ( ! this.has(templateName, templates)) {\n            return this.error(`template not found ${templateName}`)\n        }\n\n        this.info(`cloning template ${chalk.blue(templateName)}`)\n\n        target = this.createTargetFolder(target)\n\n        const template = this.resolve(templateName, templates)\n\n        this.clone(template.path, target)\n\n        this.info(`To run sketch use: cd ${target} && npm install && npm run serve`)\n\n        return this\n    }\n\n    createTargetFolder(folder) {\n\n        if ( ! fs.existsSync(folder)) {\n            mkdirp(folder)\n\n        } else {\n            folder = this.autoIncrementFoldername(folder)\n            mkdirp(folder)\n        }\n\n        return folder\n    }\n\n    resolve(name, templates) {\n        return _.find(templates, {\"name\": name})\n    }\n\n    has(name, templates) {\n        return this.resolve(name, templates) !== undefined\n    }\n\n    clone(src, dst) {\n        copydir.sync(src, dst, {\n                filter: (stat, filepath, filename) => {\n                    if (stat === 'file') {\n                        this.info(`copying ${filepath} -> ${chalk.green(dst + '/' + filename)}`)\n                    }\n                    return true\n                }\n            }\n        )\n    }\n\n    templateNames(dir) {\n        return this.templates(dir).map(tpl => tpl.name)\n    }\n\n    templates(dir) {\n        const paths = []\n        fs.readdirSync(dir).forEach(fname => {\n            const fpath = `${dir}/${fname}`\n            if (fs.statSync(fpath).isDirectory()) {\n                paths.push({name: fname, path: fs.realpathSync(fpath)})\n            }\n        });\n        return paths;\n    }\n\n    autoIncrementFoldername(candidate) {\n        let i = 1;\n        let filepath = candidate;\n\n        while (fs.existsSync(filepath)) {\n            this.warning(`exists ${filepath}`)\n            const tag = i.toString().padStart(2, '0');\n            filepath = `${candidate}-${tag}`;\n            i++;\n        }\n\n        this.success(`target ${filepath}`)\n\n        return filepath\n    }\n\n}","import Command from \"../Command\";\nimport fs from 'fs'\nimport path from 'path'\nimport {spawn} from \"child_process\";\nimport APP_ROOT from 'app-root-path'\n\n\nexport default class ServeCommand extends Command {\n\n    run(config, entry) {\n        const entrypoint = this.guessEntrypoint(entry)\n        const entrydir = path.dirname(entrypoint)\n\n        if ( ! entrypoint) {\n            this.error('entry: missing entry point')\n            this.error('...    expected <sketch-path> to be something like /path/to/sketch/index.html')\n            return this\n        }\n\n        const cmd = `${APP_ROOT}/node_modules/.bin/parcel ${entrypoint} --out-dir ${config.serve.output} --cache-dir ${config.serve.cache}` // necessary to be specific with path otherwise spawn is very very slow\n\n        this.info(`entry: ${entrypoint}`)\n        this.info(`${cmd}`)\n        this.success('building files ... ( this might take a while )')\n\n        this.spawn(cmd)\n\n        return this\n    }\n\n    outputDirectory(src) {\n        return src\n    }\n\n    guessEntrypoint(src) {\n        src = fs.realpathSync(src)\n\n        const stats = fs.lstatSync(src)\n\n        if (stats.isFile()) {\n            return src\n        }\n\n        if (stats.isDirectory()) {\n            const candidate = path.join(src, 'index.html')\n\n            if (fs.existsSync(candidate)) {\n                return candidate\n            }\n        }\n\n        return undefined\n    }\n\n    spawn(cmd) {\n        spawn(cmd, {\n            stdio: 'inherit',\n            shell: true\n        })\n    }\n\n}","import DefaultConfig from \"./p5-cli.config.json\";\nimport findUp from 'find-up'\nimport apppath from 'app-root-path'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\n\nconst CONFIG_FILENAME = 'p5-cli.config.json'\n\nconst resolve = (filepath, basedir) => {\n    if (fs.existsSync(filepath)) {\n        return fs.realpathSync(filepath)\n    }\n    return path.join(basedir, filepath)\n    console.log('filepath:', filepath, 'not found')\n    const candidate = path.join(basedir, filepath)\n\n    if (fs.existsSync(candidate)) {\n        return fs.realpathSync(candidate)\n    }\n\n    return filepath\n}\n\nconst resolveMany = (object, paths, basedir) => {\n    paths.forEach(path => {\n        if ( ! _.has(object, path)) {\n            return\n        }\n        let old = _.get(object, path)\n        let resolved = resolve(old, basedir)\n        _.set(object, path, resolved)\n    })\n}\n\nconst projectPath = (startdir, configFilename) => {\n    //search here\n    if (fs.existsSync(path.join(startdir, configFilename))) {\n        return startdir\n    }\n    //search up\n    const match = findUp.sync(configFilename, {type: 'file'})\n    if (match) {\n        return path.dirname(match)\n    }\n    //no local config, so, no \"project\"\n    return undefined\n}\n\nconst localConfig = (dir, configFilename) => {\n    if (dir && configFilename && fs.existsSync(path.join(dir, configFilename))) {\n        return require(path.join(dir, configFilename))\n    }\n    return {}\n}\n\n// paths\nappdir = apppath.path\nprojectdir = projectPath(process.cwd(), CONFIG_FILENAME)\n\n// configs\nconst defaults = DefaultConfig\nconst local = localConfig(projectdir, CONFIG_FILENAME)\n\n// get default config\nresolveMany(defaults, ['templates.path'], appdir)\nresolveMany(defaults, ['serve.output', 'serve.cache'], process.cwd())\n\n// local config\nif (local) {\n    resolveMany(local, ['templates.path'], projectdir)\n    resolveMany(local, ['serve.output','serve.cache'], projectdir)\n}\n\n//merge\nconst config = _.defaultsDeep({}, local, defaults)\n\nexport default config\n","\nimport Command from \"../Command\";\n\nexport default class ConfigCommand extends Command {\n    run(config) {\n        console.log(JSON.stringify(config,null, 4))\n        return this\n    }\n}\n","\nimport Command from \"../Command\";\n\nexport default class DataServerCommand extends Command {\n    run(config, options) {\n        console.log(\"options:\", options)\n        require(\"p5-dataserver\").serve(options)\n        return this\n    }\n}\n","import program from \"commander\";\nimport ArgumentError from \"./ArgumentError\";\nimport TemplatesCommand from \"./Command/Templates\";\nimport CloneCommand from \"./Command/Clone\";\nimport ServeCommand from \"./Command/Serve\";\nimport config from \"./config\";\nimport ConfigCommand from \"./Command/Config\";\nimport DataServerCommand from \"./Command/DataServer\";\n\n\n\nprogram\n    .version('0.1.0')\n\nprogram\n    .command('templates')\n    .alias('tpl')\n    .description('list available templates')\n    .action((cmd) => {\n        new TemplatesCommand()\n            .title('templates')\n            .run(config)\n            .close()\n    })\n\nprogram\n    .command('clone <template-name> [destination]')\n    .description('clone template intto target directory')\n    .action((tpl, dst, cmd) => {\n\n        dst = dst || `./${tpl}`\n\n        new CloneCommand()\n            .title('clone')\n            .run(config, tpl, dst)\n            .close()\n    })\n\nprogram\n    .command('config')\n    .description('display the current config')\n    .action((cmd)=>{\n        new ConfigCommand()\n            .title('config')\n            .run(config)\n            .close()\n    })\n\nprogram\n    .command('serve <sketch-path>')\n    .description('serve a sketch with parceljs')\n    .action((sketchPath, cmd) => {\n\n        new ServeCommand()\n            .title('serve')\n            .run(config, sketchPath)\n            // .close()\n    })\n\nprogram\n    .command('dataserver')\n    .alias('data-server')\n    .option('-p, --port <port>', 'port to listen on', 3000)\n    .option('-d, --debug', 'port to listen on', false)\n    .description('serve a sketch with parceljs')\n    .action((cmd) => {\n        new DataServerCommand()\n            .title('data-server')\n            .run(config, {\n                debug: cmd.debug,\n                port: cmd.port,\n            })\n    })\n\n\ntry {\n    program.parse(process.argv);\n\n    if ( ! process.argv.slice(2).length) {\n        program.help();\n    }\n\n} catch (e) {\n    if (e instanceof ArgumentError) {\n        console.log('error:', e.message);\n    } else {\n        throw e;\n    }\n}\n"],"names":["ArgumentError","Error","constructor","message","name","Command","run","config","console","log","title","chalk","magenta","info","msg","logicon","error","red","success","green","warning","yellow","close","TemplatesCommand","templatePaths","templates","path","map","filepath","blue","basename","folder","paths","fs","readdirSync","forEach","file","statSync","isDirectory","push","realpathSync","CloneCommand","templateName","target","has","createTargetFolder","template","resolve","clone","existsSync","mkdirp","autoIncrementFoldername","_","find","undefined","src","dst","copydir","sync","filter","stat","filename","templateNames","dir","tpl","fname","fpath","candidate","i","tag","toString","padStart","ServeCommand","entry","entrypoint","guessEntrypoint","entrydir","dirname","cmd","APP_ROOT","serve","output","cache","spawn","outputDirectory","stats","lstatSync","isFile","join","stdio","shell","CONFIG_FILENAME","basedir","resolveMany","object","old","get","resolved","set","projectPath","startdir","configFilename","match","findUp","type","localConfig","require","appdir","apppath","projectdir","process","cwd","defaults","DefaultConfig","local","defaultsDeep","ConfigCommand","JSON","stringify","DataServerCommand","options","program","version","command","alias","description","action","sketchPath","option","debug","port","parse","argv","slice","length","help","e"],"mappings":"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"}